name: Update Projects List

on:
  push:
    branches: [main]

jobs:
  update-list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate projects.json
        run: |
          echo '{' > projects.json
          first=true
          find . -maxdepth 1 -name "*.html" | while read file; do
            title=$(grep -oP '(?<=<title>).*?(?=</title>)' "$file" | head -n 1)
            desc=$(grep -oP '(?<=<meta name="description" content=").*?(?=")' "$file" | head -n 1)
            tags=$(grep -oP '(?<=<meta name="keywords" content=").*?(?=")' "$file" | head -n 1)

            # Escape quotes for JSON safety
            title=$(echo "$title" | sed 's/"/\\"/g')
            desc=$(echo "$desc" | sed 's/"/\\"/g')

            # Convert comma-separated tags into JSON array
            tags_json=$(echo "$tags" | awk -F',' '{
              printf "["
              for(i=1;i<=NF;i++){
                gsub(/^ +| +$/, "", $i)
                printf "\"%s\"", $i
                if(i<NF) printf ","
              }
              printf "]"
            }')

            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> projects.json
            fi

            echo "  \"$(basename "$file")\": {\"title\": \"$title\", \"desc\": \"$desc\", \"tags\": $tags_json}" >> projects.json
          done
          echo '' >> projects.json
          echo '}' >> projects.json

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add projects.json
          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update projects.json"
            git push
          else
            echo "No changes to commit"
          fi
